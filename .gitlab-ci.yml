stages:
  - tag
  - build
  - deploy
  - validate
  - renovate_bot  

.docker-build:
  services:
    - name: docker:dind
      command: ["dockerd", "--host=tcp://0.0.0.0:2375"]
      alias: 'docker'
  image: carlallen/docker:buildx
  before_script:
   - echo $REGISTRY_USER
   - docker login -u $REGISTRY_USER -p $REGISTRY_PASS ${DOCKER_REGISTRY}
   - docker buildx create --driver=docker-container --name=buildkit-builder --use
  script:
   - export CI_COMMIT_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
   - export CI_COMMIT_TAG=${CI_COMMIT_TAG/*-/}
   - ls src/${SVC_PATH}/Dockerfile && export DOCKER_FILE_PATH=src/${SVC_PATH}/Dockerfile || DOCKER_FILE_PATH=${DOCKERFILE:-Dockerfile}
   - export IMAGE_PATH=${DOCKER_REGISTRY}/${DOCKER_REGISTRY_ROOT:-ixcloud-portal}/${SVC_NAME:-$CI_PROJECT_NAME}
   - docker buildx build --build-arg CI_COMMIT_TAG=${CI_COMMIT_TAG} --build-arg DATE=$(date -u +'%Y-%m-%d') --push --platform linux/arm64/v8,linux/amd64 --build-arg CI_COMMIT_TAG -t ${IMAGE_PATH}:$CI_COMMIT_TAG -f $DOCKER_FILE_PATH ${DOCKER_BUILD_ROOT:-.}

variables:
  LOG_LEVEL: DEBUG
 


# deploy:
#   image: registry.ixcloud.ch/ix-public/sak-oc:latest
#   stage: deploy
#   script:
#     - echo ${CI_GIT_CONFIG} > ~/.gitconfig
#     - git config --global user.email "update@ixcloud.ch"
#     - git config --global user.name "update repo"
#     - git config --global --add safe.directory /builds/k8s-operators/caas-cluster-setup
#     - git remote remove origin
#     - git remote add origin ${CI_GIT_CREDENTIALS}/k8s-operators/caas-cluster-setup.git
#     - git fetch
#     - git checkout master
#     - export CI_COMMIT_TAG=$(git tag -l --sort=v:refname| tail -1)
#     - VERSION=${CI_COMMIT_TAG} envsubst < zarf/config/manager/kustomization.tmpl >  zarf/config/manager/kustomization.yaml
#     - VERSION=${CI_COMMIT_TAG} envsubst < zarf/k8s/base/kustomization.tmpl >  zarf/k8s/base/kustomization.yaml
#     - git commit -am "[skip ci] add new version" || echo "nothing to commit"
#     - git push --set-upstream origin master
#   tags:
#     - stdeployment
#   only:
#     - tags 





tag:
  stage: tag
  dependencies: []
  image: aplyca/semantic-release
  before_script:
    - echo "run semantic-release"
  script:
    # you need to set GL_TOKEN variable first!
    - semantic-release -b ${CI_COMMIT_REF_SLUG} -p @semantic-release/commit-analyzer -p @semantic-release/release-notes-generator -p @semantic-release/gitlab
  only:
    - main
  except:
    - tags
  tags:
    - stdeployment

# ---------------------------------
# Build
# ---------------------------------

build-docker-image:
  extends: .docker-build
  stage: build
  tags:
    - stdeployment
  only:
    - tags
    - master
    - merge_requests
